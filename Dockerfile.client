FROM node:18-alpine as builder
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
RUN rm -rf server
RUN npm run build

FROM nginx:alpine
WORKDIR /usr/share/nginx/html
COPY --from=builder /app/dist .
COPY --from=builder /app/privkey.pem /etc/nginx/ssl/privkey.pem
COPY --from=builder /app/fullchain.pem /etc/nginx/ssl/fullchain.pem

# Configuración de Nginx con proxy_pass para redirigir las solicitudes API al backend
RUN echo 'server { \
    listen 31043 ssl; \
    server_name hostybee.com; \
    root /usr/share/nginx/html; \
    index index.html; \
    ssl_certificate /etc/nginx/ssl/fullchain.pem; \
    ssl_certificate_key /etc/nginx/ssl/privkey.pem; \
    \
    # Redirección de API al backend \
    location /api { \
        proxy_pass https://hostybee.com:3007/api; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade $http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
    \
    location / { \
        try_files $uri /index.html; \
    } \
    \
    location ~* \\.(?:ico|css|js|woff|woff2|ttf|otf|eot|svg|jpg|jpeg|png|gif|map)$ { \
        expires 6M; \
        access_log off; \
        add_header Cache-Control "public"; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 31043
CMD ["nginx", "-g", "daemon off;"]
